---
  test_name: Hivemind follow_api.get_account_reputations patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_account_reputations
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "follow_api.get_account_reputations"
          params: {"account_lower_bound": "steem", "limit":50}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_reputations"
            directory: "follow_api_patterns"

---
  test_name: Hivemind follow_api.get_blog patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml
      #all reputation values for active voters are equal 0
  stages:
    - name: get_blog
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "follow_api.get_blog"
          params: {"account":"steemit","start_entry_id":0,"limit":1}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_blog"
            directory: "follow_api_patterns"

---
  test_name: Hivemind follow_api.get_follow_count patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_follow_count
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "follow_api.get_follow_count"
          params: {"account":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_follow_count"
            directory: "follow_api_patterns"

---

  test_name: Hivemind follow_api.get_followers patterns test

  marks:
    - patterntest # to be changed for account that has some reputation

  includes:
    - !include common.yaml

  stages:
    - name: get_followers
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "follow_api.get_followers"
          params: {"account":"steem","start":null,"type":"blog","limit":10}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_followers"
            directory: "follow_api_patterns"

---
  test_name: Hivemind follow_api.get_followers2 patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_followers2
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "follow_api.get_followers"
          params: {"account":"steem","start":null,"type":"ignore","limit":10}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_followers2"
            directory: "follow_api_patterns"

---

  test_name: Hivemind follow_api.get_following patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_following
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "follow_api.get_following"
          params: {"account":"abit","start":null,"type":"blog","limit":10}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_following"
            directory: "follow_api_patterns"

---

  test_name: Hivemind follow_api.get_reblogged_by patterns test

  marks:
    - patterntest
    - xfail  #Works only on open api or head hivemind 
            
  includes:
    - !include common.yaml

  stages:
    - name: get_reblogged_by
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "follow_api.get_reblogged_by"
          params: {"author":"wackou","permlink":"wackou-witness-post"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_reblogged_by"
            directory: "follow_api_patterns"

---

  test_name: Hivemind follow_api.get_reblogged_by_error patterns test

  marks:
    - patterntest
    - xfail        #For some params like {"author":"red","permlink":"abit-is-no-spammer"} Insomnia returns server error

            #   {
            #   "jsonrpc": "2.0",
            #   "error": {
            #   "code": -32000,
            #   "message": "Server error",
            #   "data": "ValueError: list.remove(x): x not in list"
            #   },
            #   "id": 1
            #   }

            
  includes:
    - !include common.yaml

  stages:
    - name: get_reblogged_by
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "follow_api.get_reblogged_by"
          params: {"author":"red","permlink":"abit-is-no-spammer"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_reblogged_by_error"
            directory: "follow_api_patterns"
